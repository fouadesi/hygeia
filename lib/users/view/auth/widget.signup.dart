import 'package:flutter/material.dart';import 'package:flutter_datetime_picker/flutter_datetime_picker.dart';import 'package:google_fonts/google_fonts.dart';import 'package:http/http.dart';import 'package:hygeia/users/controller/createAccount.dart';import 'package:hygeia/users/data/const/const.signup.dart';import 'package:hygeia/users/data/model/patient.dart';import 'package:hygeia/users/view/auth/widget.login.dart';import 'package:ionicons/ionicons.dart';import 'component/input.design.dart';import 'component/message.error.dart';class SignUp extends StatefulWidget {  @override  _SignUpState createState() => _SignUpState();}class _SignUpState extends State<SignUp> {  bool see_password = false ;  bool see_password2 = false ;  TextEditingController nameControlleur = new TextEditingController();  TextEditingController lastnameControlleur  = new TextEditingController();  TextEditingController phoneConrtolleur  = TextEditingController();  TextEditingController situationControlleur =TextEditingController();  TextEditingController sexControlleur =TextEditingController();  TextEditingController adressControlleur =TextEditingController();  TextEditingController wilayaControlleur =TextEditingController();  TextEditingController dateNaissanceControlleur  = TextEditingController();  TextEditingController passwordControlleur = TextEditingController();  TextEditingController confirmpasswordControlleur = TextEditingController();  TextEditingController emailControlleur = TextEditingController();  TextEditingController groupeControlleur = TextEditingController();  TextEditingController roleControlleur = TextEditingController();  TextEditingController birthPlaceControlleur = TextEditingController();  TextEditingController add = TextEditingController();  String addedtext = "";  bool showCircular = false;  bool show_password = false;    @override    void initState() {      super.initState();    }    @override    Widget build(BuildContext context) {      double height = MediaQuery.of(context).size.height;      double width = MediaQuery.of(context).size.width ;      print(height);      print(width);      return SafeArea(        child: Scaffold(          resizeToAvoidBottomInset:false,            body: LayoutBuilder(            builder: (BuildContext context, BoxConstraints constraints) {       return Container(              height: height,              width: constraints.biggest.height,              decoration: BoxDecoration(              image: DecorationImage(              image: AssetImage("assets/images/bgsss.png"),              fit: BoxFit.fill,              ),              ),         child: Column(           children: [             SizedBox(               height: height* 0.07,             ),             Container(             height: height * 0.821,             width: width * 0.81,             decoration: BoxDecoration(               borderRadius: BorderRadius.circular(27),               border: Border.all(                   color: Color.fromRGBO(112, 112, 112, 1),                   width: 0.1               ),               color: Color.fromRGBO(249, 251, 251, 1),               boxShadow: [                 BoxShadow(                   color: Color.fromRGBO(0, 0, 0, 0.16),                   spreadRadius: 2,                   blurRadius: 2,                   offset: Offset(0, 2), // changes position of shadow                 ),               ],             ),               child: Column(                 children: [               SizedBox(                 height: height* 0.025,               ),               Text("Inscription",style: GoogleFonts.archivo(                   fontSize: 35,                   fontWeight: FontWeight.bold,                   color: Color.fromRGBO(1, 85, 156, 1)               ),),               SizedBox(                 height: height* 0.005,               ),               Padding(                 padding: EdgeInsets.symmetric(horizontal: 25),                 child: Container(                   height: height *0.59,                   child: ListView(                     children: [                       TextFormField(                         controller: nameControlleur,                         style: GoogleFonts.poppins(                           color: Color.fromRGBO(21, 32, 43, 0.7),                           fontSize: 15,                         ),                         decoration:deco("Nom"),                       ),                       SizedBox(                         height: 3,                       ),                       TextFormField(                         controller: lastnameControlleur,                         style: GoogleFonts.poppins(                           color: Color.fromRGBO(21, 32, 43, 0.7),                           fontSize: 15,                         ),                         decoration:deco("Pr√©nom"),                       ),                       SizedBox(                         height: 3,                       ),                       TextFormField(                           style: GoogleFonts.poppins(                             color: Color.fromRGBO(21, 32, 43, 0.7),                             fontSize: 15,                           ),                           onTap: () {                             DatePicker.showDatePicker(context,                                 showTitleActions: true,                                 minTime: DateTime(2000, 1, 1),                                 maxTime: DateTime(2019, 6, 7), onChanged: (date) {                                   print('change $date');                                 }, onConfirm: (date) {                                   dateNaissanceControlleur.text = date.year.toString() + "/" + date.month.toString() + "/"+  date.day.toString();                                   print('confirm $date');                                 }, currentTime: DateTime.now(), locale: LocaleType.fr);                           },                           readOnly: true,                           controller: dateNaissanceControlleur,                           onChanged: (value) {                           },                           decoration: InputDecoration(  hintStyle: GoogleFonts.poppins(                             color: Color.fromRGBO(21, 32, 43, 0.7),                             fontSize: 15,                           ),                             alignLabelWithHint: true,                             hintText: "Date de naissance",                             contentPadding: EdgeInsets.only(top: 22),                             enabledBorder: UnderlineInputBorder(                               borderSide: BorderSide(                                   color: Color.fromRGBO(61, 199, 201, 1)),                             ),                             focusedBorder: UnderlineInputBorder(                               borderSide: BorderSide(                                   color: Color.fromRGBO(61, 199, 201, 1)),                             ),                             border: UnderlineInputBorder(                               borderSide: BorderSide(                                   color: Color.fromRGBO(61, 199, 201, 1)),                             ),                             errorBorder: UnderlineInputBorder(                               borderSide: BorderSide(                                   color: Color.fromRGBO(61, 199, 201, 1)),                             ),                             focusedErrorBorder: UnderlineInputBorder(                               borderSide: BorderSide(                                   color: Color.fromRGBO(61, 199, 201, 1)),                             ),                           )                       ),                       SizedBox(                         height: 3,                       ),                       TextFormField(                         readOnly: true,                         controller: birthPlaceControlleur,                         style: GoogleFonts.poppins(                           color: Color.fromRGBO(21, 32, 43, 0.7),                           fontSize: 15,                         ),                         decoration:InputDecoration(                           hintStyle: GoogleFonts.poppins(                             color: Color.fromRGBO(21, 32, 43, 0.7),                             fontSize: 15,                           ),                           alignLabelWithHint: true,                           hintText: "Lieux de naissance",                           contentPadding: EdgeInsets.only(top: 22),                           enabledBorder: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           focusedBorder: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           border: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           errorBorder: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           focusedErrorBorder: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           suffixIcon: PopupMenuButton<String>(                             icon:Align(                                 alignment: Alignment.bottomCenter,                                 child: Icon(Icons.arrow_drop_down,color: Color.fromRGBO(58, 122, 254, 1).withOpacity(0.8))),                             onSelected: (String value) {                               setState(() {                                 birthPlaceControlleur.text = value ;                               });                             },                             itemBuilder: (BuildContext context) {                               return wilaya                                   .map<PopupMenuItem<String>>((String value) {                                 return new PopupMenuItem(                                     child: new Text(value), value: value);                               }).toList();                             },                           ),                         ),                       ),                       SizedBox(                         height: 3,                       ),                       TextFormField(                         readOnly: true,                         controller: sexControlleur,                         style: GoogleFonts.poppins(                           color: Color.fromRGBO(21, 32, 43, 0.7),                           fontSize: 15,                         ),                         decoration:InputDecoration(                           hintStyle: GoogleFonts.poppins(                             color: Color.fromRGBO(21, 32, 43, 0.7),                             fontSize: 15,                           ),                           alignLabelWithHint: true,                           hintText: "Sexe",                           contentPadding: EdgeInsets.only(top: 22),                           enabledBorder: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           focusedBorder: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           border: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           errorBorder: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           focusedErrorBorder: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           suffixIcon: PopupMenuButton<String>(                             icon:Align(                                 alignment: Alignment.bottomCenter,                                 child: Icon(Icons.arrow_drop_down,color: Color.fromRGBO(58, 122, 254, 1).withOpacity(0.8))),                             onSelected: (String value) {                               setState(() {                                 sexControlleur.text = value ;                               });                             },                             itemBuilder: (BuildContext context) {                               return sexes                                   .map<PopupMenuItem<String>>((String value) {                                 return new PopupMenuItem(                                     child: new Text(value), value: value);                               }).toList();                             },                           ),                         ),                       ),                       SizedBox(                         height: 3,                       ),                       TextFormField(                         readOnly: true,                         controller: situationControlleur,                         style: GoogleFonts.poppins(                           color: Color.fromRGBO(21, 32, 43, 0.7),                           fontSize: 15,                         ),                         decoration:InputDecoration(                           hintStyle: GoogleFonts.poppins(                             color: Color.fromRGBO(21, 32, 43, 0.7),                             fontSize: 15,                           ),                           alignLabelWithHint: true,                           hintText: "Situation",                           contentPadding: EdgeInsets.only(top: 22),                           enabledBorder: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           focusedBorder: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           border: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           errorBorder: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           focusedErrorBorder: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           suffixIcon: PopupMenuButton<String>(                             icon:Align(                                 alignment: Alignment.bottomCenter,                                 child: Icon(Icons.arrow_drop_down,color: Color.fromRGBO(58, 122, 254, 1).withOpacity(0.8))),                             onSelected: (String value) {                               setState(() {                                 situationControlleur.text = value ;                               });                             },                             itemBuilder: (BuildContext context) {                               return situations                                   .map<PopupMenuItem<String>>((String value) {                                 return new PopupMenuItem(                                     child: new Text(value), value: value);                               }).toList();                             },                           ),                         ),                       ),                       SizedBox(                         height: 3,                       ),                       TextFormField(                         controller: adressControlleur,                         style: GoogleFonts.poppins(                           color: Color.fromRGBO(21, 32, 43, 0.7),                           fontSize: 15,                         ),                         decoration:deco("Adresse"),                       ),                       SizedBox(                         height: 3,                       ),                       TextFormField(                         readOnly: true,                         controller: wilayaControlleur,                         style: GoogleFonts.poppins(                           color: Color.fromRGBO(21, 32, 43, 0.7),                           fontSize: 15,                         ),                         decoration:InputDecoration(                           hintStyle: GoogleFonts.poppins(                             color: Color.fromRGBO(21, 32, 43, 0.7),                             fontSize: 15,                           ),                           alignLabelWithHint: true,                           hintText: "Wilaya",                           contentPadding: EdgeInsets.only(top: 22),                           enabledBorder: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           focusedBorder: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           border: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           errorBorder: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           focusedErrorBorder: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           suffixIcon: PopupMenuButton<String>(                             icon:Align(                                 alignment: Alignment.bottomCenter,                                 child: Icon(Icons.arrow_drop_down,color: Color.fromRGBO(58, 122, 254, 1).withOpacity(0.8))),                             onSelected: (String value) {                               setState(() {                                 wilayaControlleur.text = value ;                               });                             },                             itemBuilder: (BuildContext context) {                               return wilaya                                   .map<PopupMenuItem<String>>((String value) {                                 return new PopupMenuItem(                                     child: new Text(value), value: value);                               }).toList();                             },                           ),                         ),                       ),                       SizedBox(                         height: 3,                       ),                       TextFormField(                         keyboardType: TextInputType.phone,                         controller: phoneConrtolleur,                         style: GoogleFonts.poppins(                           color: Color.fromRGBO(21, 32, 43, 0.7),                           fontSize: 15,                         ),                         decoration:deco("Num√©ro de t√©lephone"),                       ),                       SizedBox(                         height: 3,                       ),                       //here                       TextFormField                         (                         readOnly: true,                         controller: groupeControlleur,                         style: GoogleFonts.poppins(                           color: Color.fromRGBO(21, 32, 43, 0.7),                           fontSize: 15,                         ),                         decoration:InputDecoration(                           hintStyle: GoogleFonts.poppins(                             color: Color.fromRGBO(21, 32, 43, 0.7),                             fontSize: 15,                           ),                           alignLabelWithHint: true,                           hintText: "Groupe sanguin",                           contentPadding: EdgeInsets.only(top: 22),                           enabledBorder: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           focusedBorder: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           border: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           errorBorder: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           focusedErrorBorder: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           suffixIcon: PopupMenuButton<String>(                             icon:Align(                               alignment: Alignment.bottomCenter,                                 child: Icon(Icons.arrow_drop_down,color: Color.fromRGBO(58, 122, 254, 1).withOpacity(0.8))),                             onSelected: (String value) {                               setState(() {                                 groupeControlleur.text = value ;                               });                             },                             itemBuilder: (BuildContext context) {                               return groupeSanguin                                   .map<PopupMenuItem<String>>((String value) {                                 return new PopupMenuItem(                                     child: new Text(value), value: value);                               }).toList();                             },                           ),                         ),                       ),                       SizedBox(                         height: 3,                       ),                       TextFormField(                         readOnly: true,                         controller: roleControlleur,                         style: GoogleFonts.poppins(                           color: Color.fromRGBO(21, 32, 43, 0.7),                           fontSize: 15,                         ),                         decoration:InputDecoration(                           hintStyle: GoogleFonts.poppins(                             color: Color.fromRGBO(21, 32, 43, 0.7),                             fontSize: 15,                           ),                           alignLabelWithHint: true,                           hintText: "R√¥le",                           contentPadding: EdgeInsets.only(top: 22),                           enabledBorder: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           focusedBorder: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           border: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           errorBorder: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           focusedErrorBorder: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           suffixIcon: PopupMenuButton<String>(                             icon:Align(                                 alignment: Alignment.bottomCenter,                                 child: Icon(Icons.arrow_drop_down,color: Color.fromRGBO(58, 122, 254, 1).withOpacity(0.8))),                             onSelected: (String value) {                               setState(() {                                 addedtext = value ;                                 roleControlleur.text = value ;                               });                             },                             itemBuilder: (BuildContext context) {                               return roles                                   .map<PopupMenuItem<String>>((String value) {                                 return new PopupMenuItem(                                     child: new Text(value), value: value);                               }).toList();                             },                           ),                         ),                       ),                       SizedBox(                         height: 3,                       ),                       Builder(                         builder: (context){                           if(addedtext == "") {                             return Container();                           }else  {                             String hint = "" ;                             if(addedtext == "Professeur" ) {                               hint = "Degr√©" ;                             }else if (addedtext =="Ats") {                               hint = "Service" ;                             }else {                               hint = "Promotion";                             }                             return Column(                               children:[ TextFormField(                                 controller: add,                                 style: GoogleFonts.poppins(                                   color: Color.fromRGBO(21, 32, 43, 0.7),                                   fontSize: 15,                                 ),                                 decoration:deco(hint),                               ),]                             );                           }                         },                       ),                       TextFormField(                         keyboardType: TextInputType.emailAddress,                         controller: emailControlleur,                         style: GoogleFonts.poppins(                           color: Color.fromRGBO(21, 32, 43, 0.7),                           fontSize: 15,                         ),                         decoration:deco("Email"),                       ),                       SizedBox(                         height: 3,                       ),                       TextFormField(                         controller: passwordControlleur,                         style: GoogleFonts.poppins(                           color: Color.fromRGBO(21, 32, 43, 0.7),                           fontSize: 15,                         ),                         decoration:InputDecoration(                           hintStyle: GoogleFonts.poppins(                             color: Color.fromRGBO(21, 32, 43, 0.7),                             fontSize: 15,                           ),                           alignLabelWithHint: true,                           hintText: "Mot de passe",                           contentPadding: EdgeInsets.only(top: 22),                           enabledBorder: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           focusedBorder: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           border: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           errorBorder: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           focusedErrorBorder: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           suffixIcon: Container(                             height: 5,                             width: 5,                             child: Builder(                               builder: (context) {                                 if (!see_password) {                                   return GestureDetector(                                     onTap: () {                                       setState(() {                                         see_password = !see_password;                                       });                                     },                                     child: Align(                                         alignment: Alignment                                             .bottomCenter,                                         child: Padding(                                             padding: EdgeInsets.only(                                                 bottom: 5),                                             child: Icon(                                               Ionicons.eye_outline,                                               color: Color.fromRGBO(                                                   112, 112, 112, 1),                                               size: 20,))),                                   );                                 } else {                                   return GestureDetector(                                     onTap: () {                                       setState(() {                                         see_password = !see_password;                                       });                                     },                                     child: Align(                                         alignment: Alignment                                             .bottomCenter,                                         child: Padding(                                             padding: EdgeInsets.only(                                                 bottom: 5),                                             child: Icon(                                               Ionicons.eye_off_outline,                                               color: Color.fromRGBO(                                                   112, 112, 112, 1),                                               size: 20,))),                                   );                                 }                               },),),                         ),                       ),                       SizedBox(                         height: 3,                       ),                       TextFormField(                         controller: confirmpasswordControlleur,                         style: GoogleFonts.poppins(                           color: Color.fromRGBO(21, 32, 43, 0.7),                           fontSize: 15,                         ),                         decoration:InputDecoration(                           hintStyle: GoogleFonts.poppins(                             color: Color.fromRGBO(21, 32, 43, 0.7),                             fontSize: 15,                           ),                           alignLabelWithHint: true,                           hintText: "Confirmer mot de passe",                           contentPadding: EdgeInsets.only(top: 22),                           enabledBorder: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           focusedBorder: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           border: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           errorBorder: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           focusedErrorBorder: UnderlineInputBorder(                             borderSide: BorderSide(                                 color: Color.fromRGBO(61, 199, 201, 1)),                           ),                           suffixIcon: Container(                             height: 5,                             width: 5,                             child: Builder(                               builder: (context) {                                 if (!see_password2) {                                   return GestureDetector(                                     onTap: () {                                       setState(() {                                         see_password2 = !see_password2;                                       });                                     },                                     child: Align(                                         alignment: Alignment                                             .bottomCenter,                                         child: Padding(                                             padding: EdgeInsets.only(                                                 bottom: 5),                                             child: Icon(                                               Ionicons.eye_outline,                                               color: Color.fromRGBO(                                                   112, 112, 112, 1),                                               size: 20,))),                                   );                                 } else {                                   return GestureDetector(                                     onTap: () {                                       setState(() {                                         see_password2 = !see_password2;                                       });                                     },                                     child: Align(                                         alignment: Alignment                                             .bottomCenter,                                         child: Padding(                                             padding: EdgeInsets.only(                                                 bottom: 5),                                             child: Icon(                                               Ionicons.eye_off_outline,                                               color: Color.fromRGBO(                                                   112, 112, 112, 1),                                               size: 20,))),                                   );                                 }                               },),),                         ),                       ),                       SizedBox(                         height: height*0.02,                       ),                     ],                   ),                 ),               ),               Expanded(                 child: Container(                   width: double.infinity,                   decoration : BoxDecoration(                     borderRadius: BorderRadius.only(                       bottomLeft: Radius.circular(27),                       bottomRight: Radius.circular(27),                     ),                     color: Color.fromRGBO(249, 251, 251, 1),                     boxShadow: [                     BoxShadow( color: Colors.grey.withOpacity(0.5),                       spreadRadius: 2,                       blurRadius: 4,                       offset: Offset(0, 1),                     ),                     ],                   ),child: Column(                   children: [                     SizedBox(                       height: height*0.04,                     ),                     Column(                       children: [                     !showCircular ?      CustomElevation(                           height: 39,                           child: FlatButton(                               shape: new RoundedRectangleBorder(                                   borderRadius: new BorderRadius.circular(                                       12.0)),                               padding: EdgeInsets.symmetric(horizontal: 25),                               color: Color.fromRGBO(1, 85, 156, 1),                               onPressed: () async {                                 if(nameControlleur.text.isEmpty) {                                   showErrorMessage("Vous devez entrer votre nom",context);                                   return;                                 }                                 if(lastnameControlleur.text.length == 0) {                                   showErrorMessage("Vous devez entrer votre pr√©nom",context);                                   return;                                 }                                 if(dateNaissanceControlleur.text.isEmpty) {                                   showErrorMessage("Entrer votre date de naissance",context);                                   return;                                 }                                 if(birthPlaceControlleur.text.isEmpty) {                                   showErrorMessage("Entrer votre lieux de naissance",context);                                   return;                                 }                                 if(sexControlleur.text.isEmpty) {                                   showErrorMessage("Vous devez entrer votre sexe",context);                                   return;                                 }                                 if(situationControlleur.text.isEmpty) {                                   showErrorMessage("Vous devez chosir votre situation",context);                                   return;                                 }                                 if(adressControlleur.text.isEmpty) {                                   showErrorMessage("Vous devez entrer votre adresse",context);                                   return;                                 }                                 if(wilayaControlleur.text.isEmpty) {                                   showErrorMessage("Vous devez choisir votre wilaya",context);                                   return;                                 }                                 if(wilayaControlleur.text.isEmpty) {                                   showErrorMessage("Vous devez choisir votre wilaya",context);                                   return;                                 }                                 if(phoneConrtolleur.text.length != 10) {                                   showErrorMessage("Entrer votre num√©ro t√©l√©phone",context);                                   return;                                 }                                 if(groupeControlleur.text.isEmpty) {                                   showErrorMessage("Vous devez choisir votre groupe sanguin",context);                                   return;                                 }                                 if(roleControlleur.text.isEmpty) {                                   showErrorMessage("Vous devez choisir votre r√¥le",context);                                   return;                                 }                                 if(add.text.isEmpty) {                                   if(roleControlleur.text == "Professeur"){                                     showErrorMessage("Vous devez entrer votre degr√©",context);                                     return;                                   }else if(roleControlleur.text == "Ats") {                                     showErrorMessage("Vous devez remplir votre service",context);                                     return;                                   }else  {                                     showErrorMessage("Vous devez remplir votre promotion",context);                                     return;                                   }                                   return;                                 }                                 if(!RegExp(                                     '^[a-zA-Z][a-zA-Z]?.[a-zA-Z]*@esi-sba.dz').hasMatch(emailControlleur.text)) {                                        showErrorMessage("Vous devez remplir votre email",context);                                        return;                                 }                                 if(passwordControlleur.text.length < 9) {                                   showErrorMessage("Entrer votre mot de passe",context);                                   return;                                 }                                 if(confirmpasswordControlleur.text != passwordControlleur.text) {                                   showErrorMessage("Entrer le m√™me mot de passe",context);                                   return;                                 }                                 setState(() {                                   showCircular = false ;                                 });                                 Patient p = new Patient(                                    bloodgroupe: groupeControlleur.text,                                     name: nameControlleur.text,                                     lastname: lastnameControlleur.text,                                     email: emailControlleur.text,                                     password: passwordControlleur.text,                                     phonenumber: phoneConrtolleur.text,                                     role: roleControlleur.text,                                     sexe: sexControlleur.text,                                     birthday: dateNaissanceControlleur.text,                                     birthplace: birthPlaceControlleur.text,                                     add: add.text,                                     wilaya: wilayaControlleur.text,                                     adresse: adressControlleur.text,                                     situation: situationControlleur.text);                                 String res =  await CreateAccount().createAccount_f(p) ;                                   if(res == "Ce compte existe d√©ja")    {                                     showErrorMessage("Ce compte existe d√©ja",context);                                     return;                                   } else {                                     showSuccesMessage("Votre compte a √©t√© cr√©√© avec succ√®s",context);                                     showSuccesMessage("Une confirmation vous a √©t√© envoy√©",context);                                     showSuccesMessage("Vous devez confirmer votre compte !",context);                                   }                                /* nameControlleur.text ="" ;                                 emailControlleur.text = "" ;                                 birthPlaceControlleur.text = "" ;                                 lastnameControlleur.text = "" ;                                 add.text = "" ;                                 wilayaControlleur.text = "" ;                                 adressControlleur.text = "" ;                                 passwordControlleur.text = "";                                 confirmpasswordControlleur.text ="";                                 situationControlleur.text ="";                                 phoneConrtolleur.text = "" ;                                 sexControlleur.text ="";                                 roleControlleur.text = "" ; */                                 return ;                               },                               child: Text(                                 "S'inscrire", style: GoogleFonts.poppins(                                 color: Colors.white,                                 fontSize: 18,                               ),)),                         ) : CircularProgressIndicator(),                         SizedBox(                           height: height *0.017,                         ),                         GestureDetector(                             onTap: () {                               Navigator.push(context, MaterialPageRoute(builder: (context)=> SignUp()));                             },                             child: Text("Vous avez un compte ? se connecter",                               style: GoogleFonts.poppins(                                 color: Color.fromRGBO(21, 32, 43, 1),                                 fontSize: 11,                               ),)),],                     ),                   ],                 ),                 ),               ),                 ],               ),             )           ],         ),       );      }        ),      ),      );    }}